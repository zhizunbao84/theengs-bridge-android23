name: Build Android APK (API 23)

on:
  workflow_dispatch:          # 手动触发按钮

# ① 授予写权限（提交 & 推送）
permissions:
  contents: write   # 允许写仓库内容
  pull-requests: write   # 可选：若后续要开 PR

jobs:
  build:
    runs-on: ubuntu-latest
    timeout-minutes: 30
    steps:

    # ① 拉取源码 + 子模块
    - name: Checkout
      uses: actions/checkout@v4
      with:
        submodules: recursive

    - name: 初始化并重新添加子模块（纯 CI）
      run: |
        # 1. 若 decoder 目录不存在，重新添加子模块
        if [ ! -d decoder ]; then
          git submodule add https://github.com/theengs/decoder.git decoder
        fi

        # 2. 初始化 & 拉取子模块
        git submodule update --init --recursive

        # 3. 进入子模块，检出默认分支（自动检测）
        cd decoder
        default_branch=$(git symbolic-ref refs/remotes/origin/HEAD | sed 's@^refs/remotes/origin/@@')
        echo $default_branch
        git pull origin "$default_branch"
        cd ..

        # 4. 记录子模块 commit 并提交
        git add decoder
        git diff --cached --quiet || (
          git config user.name  "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git commit -m "ci: add/update decoder submodule"
          git push
        )

    - name: Verify submodule exist
      run: |
        echo "=== 查看 decoder 目录 ==="
        ls -la decoder/
        echo "=== 查看 decoder/.git ==="
        cat decoder/.git 2>/dev/null || echo "（无 .git 文件，可能是 gitlink）"
        echo "=== 查看子模块提交 ==="
        git -C decoder rev-parse HEAD

    # ② JDK 17（Gradle 8 需要）
    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        distribution: 'temurin'
        java-version: '17'


    - name: 安装 Android SDK 平台 33 & NDK
      run: |
        # 1. 安装命令行工具
        mkdir -p $ANDROID_SDK_ROOT/cmdline-tools
        curl -o cmdline-tools.zip https://dl.google.com/android/repository/commandlinetools-linux-9477386_latest.zip
        unzip -q cmdline-tools.zip -d $ANDROID_SDK_ROOT/cmdline-tools
        mv $ANDROID_SDK_ROOT/cmdline-tools/cmdline-tools $ANDROID_SDK_ROOT/cmdline-tools/latest

        # 2. 接受许可 & 装平台 + NDK
        yes | $ANDROID_SDK_ROOT/cmdline-tools/latest/bin/sdkmanager --licenses
        $ANDROID_SDK_ROOT/cmdline-tools/latest/bin/sdkmanager \
          "platforms;android-33" \
          "ndk;21.4.7075529" \
          "cmake;3.22.1"
        
    # ③ 2025 官方推荐：自动安装完整 Gradle 8.x 并缓存
    - name: Setup Gradle
      uses: gradle/actions/setup-gradle@v4
      with:
        gradle-version: '8.1.1'   # 指定版本，可选

    # ③ 用本地 gradle 生成 wrapper（一次即可）
    - name: Generate Gradle Wrapper
      run: gradle wrapper --gradle-version 8.0

    # ④ 后续统一用 gradlew 构建（缓存、签名等不变）
    - name: Grant execute permission for gradlew
      run: chmod +x ./gradlew
      
    - name: Install xmllint
      run: sudo apt-get update && sudo apt-get install -y libxml2-utils

    - name: Validate XML syntax
      run: xmllint --noout app/src/main/AndroidManifest.xml

    # ⑥ 编译 Debug APK
    - name: Build APK
      run: ./gradlew assembleDebug --stacktrace

    # ⑦ 把产物上传到 Actions 页面供下载
    - name: Upload APK
      uses: actions/upload-artifact@v4
      with:
        name: theengs-api23-debug
        path: app/build/outputs/apk/debug/*.apk
